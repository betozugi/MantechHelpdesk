package vn.aptech.MantechHelpdesk.entities;
// Generated Oct 4, 2014 4:48:05 PM by Hibernate Tools 3.6.0


import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Member generated by hbm2java
 */
@Entity
@Table(name="Member"
    ,schema="dbo"
    ,catalog="MantechHelpdesks"
)
public class Member  implements java.io.Serializable {


     private int id;
     private String username;
     private String password;
     private String email;
     private String fullname;
     private Date birthday;
     private String address;
     private String sex;
     private String phone;
     private String department;
     private String avatar;
     private Set<Feedback> feedbacks = new HashSet<Feedback>(0);
     private Set<Complaint> complaints = new HashSet<Complaint>(0);

    public Member() {
    }

	
    public Member(int id) {
        this.id = id;
    }
    public Member(int id, String username, String password, String email, String fullname, Date birthday, String address, String sex, String phone, String department, String avatar, Set<Feedback> feedbacks, Set<Complaint> complaints) {
       this.id = id;
       this.username = username;
       this.password = password;
       this.email = email;
       this.fullname = fullname;
       this.birthday = birthday;
       this.address = address;
       this.sex = sex;
       this.phone = phone;
       this.department = department;
       this.avatar = avatar;
       this.feedbacks = feedbacks;
       this.complaints = complaints;
    }
   
     @Id 

    
    @Column(name="Id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="Username")
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="Password")
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="Email")
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="Fullname")
    public String getFullname() {
        return this.fullname;
    }
    
    public void setFullname(String fullname) {
        this.fullname = fullname;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Birthday", length=23)
    public Date getBirthday() {
        return this.birthday;
    }
    
    public void setBirthday(Date birthday) {
        this.birthday = birthday;
    }

    
    @Column(name="Address")
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="Sex")
    public String getSex() {
        return this.sex;
    }
    
    public void setSex(String sex) {
        this.sex = sex;
    }

    
    @Column(name="Phone")
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="department")
    public String getDepartment() {
        return this.department;
    }
    
    public void setDepartment(String department) {
        this.department = department;
    }

    
    @Column(name="Avatar")
    public String getAvatar() {
        return this.avatar;
    }
    
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="member")
    public Set<Feedback> getFeedbacks() {
        return this.feedbacks;
    }
    
    public void setFeedbacks(Set<Feedback> feedbacks) {
        this.feedbacks = feedbacks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="member")
    public Set<Complaint> getComplaints() {
        return this.complaints;
    }
    
    public void setComplaints(Set<Complaint> complaints) {
        this.complaints = complaints;
    }




}


